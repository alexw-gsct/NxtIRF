<tool id="irfinder_mappability" name="IRFinder for Galaxy - Mappability Generation" version="0.1.0">
    
    <!-- [REQUIRED] Tool description displayed after the tool name -->
    <description>This tool runs Mappability generation via STAR</description>

    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>    
    <!-- [OPTIONAL] 3rd party tools, binaries, modules... required for the tool to work -->
    
<!--
    <requirements>
        <requirement type="binary">required_binary</requirement>
    </requirements>
-->
    
    
    <!-- [OPTIONAL] Command to be executed to get the tool's version string -->
    <version_command>
<!--
        tool_binary -v
-->
    </version_command>
    
    <!-- [REQUIRED] The command to execute -->
    <command><![CDATA[          
        @TEMPINDEX@
        STAR
        @REFGENOMEHANDLING@
        --outSAMtype BAM Unsorted --outStd BAM_Unsorted --outSAMmode NoQS --outSAMattributes None --outFilterMultimapNmax 1
        --readFilesIn <(
        #if str($fasta_type.fasta_source) == "all_fasta_source":
            ${__tool_directory__}/irfinder_galaxy gen_map_reads '$fasta_type.ref.fields.path' 
                - $read_len $read_stride
        #else if str($fasta_type.fasta_source) == "private_fasta":
            ${__tool_directory__}/irfinder_galaxy gen_map_reads '$fasta_type.ref' 
                - $read_len $read_stride
        #end if
        ) | tee $output3 |
        
        #if str($includeCov == "yes"):
            ${__tool_directory__}/irfinder_galaxy process_mappability_bam - $output1 $threshold $output2
        #else:
            ${__tool_directory__}/irfinder_galaxy process_mappability_bam - $output1 $threshold
        #end if
    ]]></command>
    
    <!-- [REQUIRED] Input files and tool parameters -->
    <inputs>
        <conditional name="fasta_type" >
            <param name="fasta_source" type="select" label="FASTA Source" help="" >
                <option value="all_fasta_source" selected="true">From Galaxy's ALL_FASTA Library</option>
                <option value="private_fasta" selected="true">From User's History</option>
            </param>
            <when value="all_fasta_source">
                <param name="ref" type="select" label="Source FASTA Sequence" help="A genome fasta file from ALL_FASTA">
                    <options from_data_table="all_fasta"/>
                </param>
            </when>
            <when value="private_fasta">
                <param name="ref" type="data" format="fasta" label="Source FASTA Sequence" help="A genome fasta file from user's history" />
            </when>
        </conditional>
        <param name="read_len" type="integer" value="70" min="50" max="200" label="Read length"/>
        <param name="read_stride" type="integer" value="10" min="5" max="50" label="Read stride"/>
        <param name="threshold" type="integer" value="4" min="0" max="20" label="Threshold read depth for mappability"/>
        <param name="includeCov" type="select" label="Include Coverage file">
          <option value="yes" selected="true">Yes</option>
          <option value="no">No</option>
        </param>
        
        <!-- Genome source. -->
        <conditional name="refGenomeSource">
            <param name="geneSource" type="select" label="Custom or built-in reference genome" help="Built-ins were indexed using default options">
                <option value="indexed" selected="true">Use a built-in index</option>
                <option value="history">Use reference genome from history and create temporary index</option>
            </param>
            <when value="indexed">
                <conditional name="GTFconditional">
                    <param name="GTFselect" type="select"
                           label="Reference genome with or without an annotation"
                           help="Select the '... with builtin gene-model' option to select from the list of available indexes that were built with splice junction information. Select the '... without builtin gene-model' option to select from the list of available indexes without annotated splice junctions, and, optionally, provide your own splice-junction annonations.">
                        <option value="without-gtf" selected='true'>use genome reference without builtin gene-model</option>
                        <option value="with-gtf">use genome reference with builtin gene-model</option>
                    </param>
                    <when value="with-gtf">
                        <expand macro="index_selection" with_gene_model="1" />
                    </when>
                    <when value="without-gtf">
                        <expand macro="index_selection" with_gene_model="0" />
                        <expand macro="@SJDBOPTIONS@" />
                    </when>
                </conditional>
            </when>
            <when value="history">
                <expand macro="ref_selection" />
                <conditional name="GTFconditional">
                    <param name="GTFselect" type="select"
                           label="Build index with or without known splice junctions annotation"
                           help="To build an index with known splice junctions annotated, you will have to provide a GTF or GFF3 dataset that describes the gene models (the location of genes, transcripts and exons) known for the reference genome.">
                        <option value="without-gtf">build index without gene-model</option>
                        <option value="with-gtf">build index with gene-model</option>
                    </param>
                    <when value="with-gtf">
                        <expand macro="@SJDBOPTIONS@" optional="false"/>
                    </when>
                    <when value="without-gtf" />
                </conditional>
            </when>
        </conditional>
    </inputs>

    <!-- [STRONGLY RECOMMANDED] Exit code rules -->
    <stdio>
        <!-- [HELP] If no exit code rule is defined, the tool will stop if anything is written to STDERR -->
        <exit_code range="1:" level="fatal" />
    </stdio>
    
    <!-- [REQUIRED] Output files -->
    <outputs>
        <data name="output1" format="txt" label="Mappability Regions"/> 
        <data name="output2" format="data" label="Mappability Coverage File"> 
			<filter>includeCov == 'yes'</filter>
        </data>
        <data name="output3" format="bam" label="BAM File"/> 
    </outputs>    
    
    <!-- [OPTIONAL] Tests to be run manually by the Galaxy admin -->
    <tests>
        <!-- [HELP] Test files have to be in the ~/test-data directory -->
<!--
        <test>
         <param name="input" value="input_test.txt" />
         <output name="output" file="output_test.txt" />
        </test>
-->
        <!-- [HELP] Multiple tests can be defined with different parameters -->
<!--
        <test>
        </test>
-->
    </tests>
    
    <!-- [OPTIONAL] Help displayed in Galaxy -->
    <help>

.. class:: infomark

**Authors** Alex Wong a.wong@centenary.org.au

---------------------------------------------------

.. class:: infomark

**Please cite** If you use this tool, please cite `Wong A (2020). NxtIRF - User friendly Intron Retention and Alternative Splicing Analysis &lt;https://www.jwongepirna.com/&gt;`_

---------------------------------------------------

==============
Tool Name
==============

-----------
Description
-----------

 | Description of the tool in 1 lines
 | or 2 lines


-----------------
Workflow position
-----------------

**Upstream tools**

====== =========== ======= ============
Name   output file format  parameter
====== =========== ======= ============
tool 1 outFile.tab tabular param name 1
tool 2 outFile.csv csv     param name 2
====== =========== ======= ============


**Downstream tools**

====== =========== =======
Name   output file format 
====== =========== =======
tool 1 outFile.tab tabular
tool 2 outFile.csv csv    
====== =========== =======


-----------
Input files
-----------

+-------------------------+-----------+
| Parameter : num + label |  Format   |
+=========================+===========+
| 1 : file1.tab           |  tabular  |
+-------------------------+-----------+
| 2 : file2.csv           |   csv     |
+-------------------------+-----------+

Constraints files : 
	* column 1 : description
	* column 5 : description


----------
Parameters
----------

parameter1
	Parameter 1 description

parameter2longer
	| Parameter 2 description
	| on 2 lines if needed


------------
Output files
------------

output.tab
	| File description
	| You can continue your analysis with the tool retcor or fillPeaks

outFile.csv
	File description

	
---------------------------------------------------

---------------
Working example
---------------

Input files
===========

| **These input files can be used in the purview "URL/Text:" of the tool "Get Data/Upload File",**
| **by checking the box "Convert spaces to tabs: YES"**

file1.txt
	Model input file::
	
		colonne1 colonne2 col3 etc
		element1.1 element1.2 el1.3 ...
		element2.1 elem2.2 el1.3 ...
		elem3.1 3.2 el1.3 ...

		
Parameters
==========

Parameter 1  -> **content**

Parameter 2  -> **content**


Output files
============

output.pdf

.. image:: ./static/images/output.png
        :width: 500
        :height: 400
	

output.txt

========== ========== ===== ===
colonne1   colonne 2  col3  etc
========== ========== ===== ===
element1.1 element1.2 el1.3 ...
element2.1 elem 2.2   el1.3 ...
elem3.1       3.2     el1.3 ...
========== ========== ===== ===


output.other::
	Something
	
---------------------------------------------------

.. class:: infomark

More information about formatting can be found here: http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html
    </help>
    
</tool>
